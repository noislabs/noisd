syntax = "proto3";

package nois.allocation.v1;
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/noislabs/noisd/x/allocation/types";

message DistributionProportions {
  string developer_rewards = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"developer_rewards\"",
    (gogoproto.nullable) = false
  ];
  string validator_rewards = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"validator_rewards\"",
    (gogoproto.nullable) = false
  ];
  string randomness_rewards = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"randomness_rewards\"",
    (gogoproto.nullable) = false
  ];
}
message WeightedAddress {
  string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  string weight = 2 [
    (gogoproto.moretags) = "yaml:\"weight\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message Params {
  // distribution_proportions defines the proportion of the minted denom
  DistributionProportions distribution_proportions = 1
      [ (gogoproto.nullable) = false ];

  // address to receive developer rewards
  repeated WeightedAddress weighted_developer_rewards_receivers = 2 [
    (gogoproto.moretags) = "yaml:\"developer_rewards_receiver\"",
    (gogoproto.nullable) = false
  ];

  // address to receive randomness rewards
  string randomness_rewards_receiver = 3
      [ (gogoproto.moretags) = "yaml:\"randomness_rewards_receiver\"" ];
}
