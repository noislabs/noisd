version: 2.1

jobs:
  build:
    docker:
      - image: cimg/go:1.20.1
    steps:
      - checkout
      - run:
          name: Build
          command: make build
      - run:
          name: Check libwasmvm version
          command: |
            LIBWASMVM_VERSION=$(./build/noisd query wasm libwasmvm-version)
            if [[ "$LIBWASMVM_VERSION" != "1.2.0" ]] ; then
              echo "Got unexpected libwasmvm version: $LIBWASMVM_VERSION"
              exit 1
            fi
  tidy:
    docker:
      - image: cimg/go:1.20.1
    steps:
      - checkout
      - run:
          name: Check go mod tidy
          # Use --check or --exit-code when available (Go 1.21?)
          # https://github.com/golang/go/issues/27005
          command: |
            go mod tidy
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
  format-go:
    docker:
      - image: cimg/go:1.20.1
    steps:
      - run:
          name: Install gofumpt
          command: go install mvdan.cc/gofumpt@v0.4.0
      - checkout
      - run:
          name: Check Go formatting with gofmt
          command: |
            [ "$(gofmt -l .)" = "" ] || (gofmt -d . && exit 1)
      - run:
          name: Check Go formatting with gofumpt
          command: |
            [ "$(gofumpt -l .)" = "" ] || (gofumpt -d . && exit 1)
  docker-image:
    docker:
      - image: cimg/go:1.20.1
    steps:
      - checkout
      - setup_remote_docker:
          # >= v20.10 https://wiki.alpinelinux.org/wiki/Release_Notes_for_Alpine_3.14.0#faccessat2
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: docker build --pull -t "noislabs/noisd:${CIRCLE_SHA1}" --target noisd .
      - run:
          name: Run Docker image
          command: docker run --rm "noislabs/noisd:${CIRCLE_SHA1}"
      - run:
          name: Ensure libwasmvm version is correct
          command: |
            IN_DOCKER=$(docker run --rm "noislabs/noisd:${CIRCLE_SHA1}" /usr/bin/noisd query wasm libwasmvm-version)
            echo "Runtime libwasmvm-version in docker: $IN_DOCKER"
            IN_GOMOD=$(go list -m github.com/CosmWasm/wasmvm | cut -d" " -f2 | cut -d"v" -f2)
            echo "wasmvm version in go.mod: $IN_GOMOD"
            if [[ "$IN_DOCKER" != "$IN_GOMOD" ]]; then
              echo "Mismatch of wasmvm versions detected"
              exit 1
            fi
      # - when:
      #     condition:
      #       equal: [ main, << pipeline.git.branch >> ]
      #     steps:
      #       - run:
      #           name: Push application Docker image to docker hub
      #           command: |
      #             docker tag "cosmwasm/wasmd:${CIRCLE_SHA1}" cosmwasm/wasmd:latest
      #             docker login --password-stdin -u "$DOCKER_USER" \<<<"$DOCKER_PASS"
      #             docker push cosmwasm/wasmd:latest
      #             docker logout

workflows:
  build_and_test:
    jobs:
      - build
      - tidy
      - format-go
      - docker-image
